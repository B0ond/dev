PostgreSQL:

    что бы устновить:  sudo apt install postgresql postgresql-contrib
-y (y - что бы потверждать автаматически)

    сменить пароль: sudo passwd postgres
(postgres это имя пользователя((видимо дефолтное)))

Запустить PostgreSQL:
    sudo service postgresql start

    насчет портов (порт по умолчанию в постгрес 5432)
        cd /etc/postgresql/14/main/
        nano postgresql.conf

после утсновки нужно ребутнуть postgreSQL
     sudo service postgresql restart

зайти в своего пользователя:
    (su postgres)

Интерактивный терминал в postgresql:
    psql

создать роль/пользователя:
    create role  USER_NAME with password 'your password'

без этой команды работать юзеру с БД неполучится:
    alter role "USER_NAME" with login;

Дает разрещение пользователю создавать базы данных:
    alter user USER_NAME createdb


Выдать все права на базу данных для пользователя:
    grant all privileges on database "my_db" to USER_NAME;


Проверить бд:
    \list (\l)
    Подключиться к БД:
        \c db_name  (\connect db_name)

Дать все привелегии на схему public (находясь в нужной db и через пользователя postgresql):
    grant all on schema public to USER_NAME;

выход:
    exit

Что бы перейти в пользователя:
    su role_name


==========================================
МИГРАЦИИ в flask

Что бы можно было делать миграции надо устновить flask-migrate
перед инициализацие удалить все тестовые db
далее запускаем инициализацию(только при новом создании БД)
    flask db init

что бы фласк подхватил изменения db надо ввести
    flask db migrate -m "Описание изменений" (говорит бд "Найди изменения")
потом
    flask db upgrade (говорит бд "Примени изменения")